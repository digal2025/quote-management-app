version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: quote_app_postgres
    environment:
      POSTGRES_DB: quote_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - quote_app_network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: quote_app_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - quote_app_network
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    container_name: quote_app_minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - quote_app_network
    restart: unless-stopped

  mailhog:
    image: mailhog/mailhog:latest
    container_name: quote_app_mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - quote_app_network
    restart: unless-stopped

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: quote_app_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - quote_app_network
    restart: unless-stopped
    depends_on:
      - postgres

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  quote_app_network:
    driver: bridge 